import sys
import csv
import numpy as np
import pandas as pd
import re
import os
import subprocess
from os.path import walk
from os.path import join, splitext

perm = pd.DataFrame(columns=["label","file_name","activity_list", "service_list", "content_provider_list", "broadcast_receiver_list", "intent_filter_list","custom_permissions"])
filecount = 0

def parseData(dirpath, label, count):
	for dirpath,dirnames,filenames in os.walk(dirpath):
		#print filenames
		for file in filenames:
			if file.endswith(".ldata"):
				#print file

				shakes = open(join(dirpath,file),"r")
				#print shakes
				f = open(join(dirpath,file),"r").read()
				#print f

				all_permission = []
				#all_hardware = []

				activity_list = f.count('ActivityList')
				#print activity_list
				service_list = f.count('ServiceList')
				#print service_list
				content_provider_list = f.count('ContentProviderList')
				#print content_provider_list
				broadcast_receiver_list = f.count('BroadcastReceiverList')
				#print broadcast_receiver_list
				intent_filter_list = f.count('IntentFilterList')
				#print intent_filter_list



				#pi = #requested permissions
				#hi = #requested hardware

				#finding RequestedPermissionList in the file
				for whole_doc_container in shakes:
					#print whole_doc_container #fetching the whole document by a for loop
					if "RequestedPermissionList" in whole_doc_container: #finding all RequestedPermissionList in the whole document. Another way is re.match("RequestedPermissionList",whole_doc_container):
						#print whole_doc_container
						whole_doc_container = whole_doc_container.strip()
						if whole_doc_container.startswith("RequestedPermissionList_"):
							whole_doc_container = whole_doc_container[32:]
							#all_permission.append(whole_doc_container)
							if whole_doc_container.startswith("permission"):
								all_permission.append(whole_doc_container) #adding the android.permission values in the list all_permission. the coloumns are added AUTOMATICALLY. WHERE IT IS ADDED AUTOMATICALLY??
								if whole_doc_container not in list(perm.columns.values):#checking which android.permission is not in the coloumns
								#print whole_doc_container
									perm[whole_doc_container]=0#assigning its value to 0
				shakes.close()

				#HardwareComponentsList starts
				shakes_2 = open(join(dirpath,file),"r")
				for whole_doc_container_2 in shakes_2:
					#print shakes_2
					#print whole_doc_container_2 #fetching the whole document by a for loop
					if "HardwareComponentsList" in whole_doc_container_2: #finding all android.permissions in the whole document. Another way is re.match("RequestedPermissionList",whole_doc_container):
						#print whole_doc_container_2
						whole_doc_container_2 = whole_doc_container_2.strip()
						if whole_doc_container_2.startswith("HardwareComponentsList"):
							whole_doc_container_2 = whole_doc_container_2[31:]
							all_permission.append(whole_doc_container_2) #adding the android.permission values in the list all_permission. the coloumns are added AUTOMATICALLY. WHERE IT IS ADDED AUTOMATICALLY??
							if whole_doc_container_2 not in list(perm.columns.values):#checking which android.permission is not in the coloumns
								#print whole_doc_container_2
								perm[whole_doc_container_2]=0#assigning its value to 0
				shakes_2.close()

				#Custom Permissions Count starts
				shakes_3 = open(join(dirpath,file),"r")
				custom_permissions = 0
				for whole_doc_container_3 in shakes_3:
				#print whole_doc_container
					if "RequestedPermissionList" in whole_doc_container_3:
						whole_doc_container_3 = whole_doc_container_3.strip()
						if whole_doc_container_3.startswith("RequestedPermissionList"):
							whole_doc_container_3 = whole_doc_container_3[32:]
							#print whole_doc_container
							if not whole_doc_container_3.startswith("permission"):
								#print whole_doc_container
								custom_permissions = len(whole_doc_container_3)
								#print custom_permissions


				data = [label,file, activity_list, service_list, content_provider_list, broadcast_receiver_list, intent_filter_list, custom_permissions] + [1 if p in all_permission else 0 for p in list(perm.columns.values)[8:]] #Assigning all the values to the coloumns. Value of p is 0 or 1. If p exists in all permission then value will be 1. If p does not exist in the coloumn list then 0. 5: signifies it will take these data after the 5th coloumn.

				perm.loc[len(perm)] = data #binds the perm and data together
				count = count + 1
				print count, " files processed"
	return count



filecount = parseData('C:\Users\subha\OneDrive\Desktop\IITK Winter\Machine Learning\Dataset\goodware', 1, filecount)
filecount = parseData('C:\Users\subha\OneDrive\Desktop\IITK Winter\Machine Learning\Dataset\malware', 0, filecount)
perm.to_csv('Dataset_Final.csv',index= False) # convert the total data into csv.
#print perm




#print pi
#finding AllUsedhardware in the file




#put all the lists into csv

#np.savetxt("file_name.csv", np.column_stack((data1, data2)), delimiter=",", fmt='%s', header=header)
#df = pd.DataFrame(data={"col1": list_1, "col2": list_2, "col3": list_2, "col4": list_2, "col5": list_2, "col6": list_2,"col7": list_2,"col8": list_2})
#df.to_csv("./file.csv", sep=',',index=False)

'''

'''
